plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.google.protobuf" version "$protobufPluginVersion"
}

group = 'chatweb'
version = '0.0.1-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.google.protobuf'

    java {
        sourceCompatibility = '17'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protobufVersion}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-json'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        implementation "net.devh:grpc-client-spring-boot-starter:${springBootGrpcVersion}"
        implementation "net.devh:grpc-server-spring-boot-starter:${springBootGrpcVersion}"
        implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
        implementation "io.grpc:grpc-stub:${grpcVersion}"
        implementation "io.grpc:grpc-protobuf:${grpcVersion}"
        if (JavaVersion.current().isJava9Compatible()) {
            // Workaround for @javax.annotation.Generated
            // see: https://github.com/grpc/grpc-java/issues/3633
            compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
            annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        }
        implementation 'org.apache.httpcomponents:httpclient:4.5.14'
        implementation 'org.liquibase:liquibase-core'
        implementation 'org.jetbrains:annotations:23.0.0'
        implementation 'com.github.jknack:handlebars:4.3.1'
        implementation 'commons-validator:commons-validator:1.7'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'com.sun.mail:javax.mail:1.5.5'
        implementation 'org.postgresql:postgresql:42.6.0'
        implementation 'ch.qos.logback:logback-core:1.3.5'
        implementation 'ch.qos.logback:logback-classic:1.3.5'
        implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"

        runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
        runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.mockito:mockito-core:3.+'
        testImplementation 'org.slf4j:slf4j-api:2.0.4'
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        archiveFileName = "${project.parent.name}-${project.name}.jar"
    }

    bootJar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

}